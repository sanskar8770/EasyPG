{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\PGLife\\\\PG-Life-main\\\\react-app\\\\src\\\\mess.js\";\nimport React, { Component } from 'react';\nimport FilterBar from './FilterBar';\nimport FilterModal from './FilterModal';\nimport messCard from './messCard';\nimport Nomess from './Nomess';\nimport { base_path } from './utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass mess extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      messes: [],\n      sort: \"none\",\n      filter: {\n        gender: \"none\"\n      },\n      isEditing: false\n    };\n\n    this.toggleInterested = mess_id => {\n      fetch(`${base_path}/api/toggle_interested_mess.php?mess_id=${mess_id}`).then(response => response.json()).then(responseData => {\n        if (responseData.success) {\n          console.log('Success');\n          this.updateInterested(mess_id);\n        } else if (!responseData.success && !responseData.is_logged_in) {\n          console.log('Not logged in!');\n          window.$(\"#login-modal\").modal(\"show\");\n        }\n      }).catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });\n    };\n\n    this.updateInterested = mess_id => {\n      let updated_messes = [...this.state.messes];\n      updated_messes.forEach(mess => {\n        if (mess.id === mess_id) {\n          mess.is_interested = !mess.is_interested;\n\n          if (mess.is_interested) {\n            mess.interested_users_count++;\n          } else {\n            mess.interested_users_count--;\n          }\n        }\n      });\n      this.setState({\n        messes: updated_messes\n      });\n    };\n\n    this.updateSort = sort => {\n      this.setState({\n        sort: sort\n      });\n    };\n\n    this.updateFilter = gender => {\n      this.setState({\n        filter: {\n          gender: gender\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const search = window.location.search; //return query string part of url including ?\n\n    const params = new URLSearchParams(search); //API to convert search query to object\n\n    const city_name = params.get('city');\n    fetch(`${base_path}/api/get_messes_by_city.php?city=${city_name}`) //API to fetch messes object it returns a promise\n    .then(response => response.json()) //response.json() is an api which parse the response to object . it also returns a promise\n    .then(responseData => {\n      this.setState({\n        messes: responseData\n      });\n    }).catch(error => {\n      console.log('Error fetching and parsing data', error);\n    });\n  }\n\n  render() {\n    let messes = [...this.state.messes]; // Sorting\n\n    if (this.state.sort !== \"none\") {\n      if (this.state.sort === \"desc\") {\n        messes.sort((a, b) => b.rent - a.rent);\n      } else {\n        messes.sort((a, b) => a.rent - b.rent);\n      }\n    } // Filter\n\n\n    if (this.state.filter.gender !== \"none\") {\n      messes = messes.filter(mess => mess.gender === this.state.filter.gender);\n    }\n\n    let mess_cards;\n\n    if (messes.length > 0) {\n      mess_cards = messes.map(mess => /*#__PURE__*/_jsxDEV(\"messCard\", {\n        mess: mess,\n        toggleInterested: () => this.toggleInterested(mess.id)\n      }, mess.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this));\n    } else {\n      mess_cards = /*#__PURE__*/_jsxDEV(Nomess, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 26\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-container\",\n        children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n          currentSort: this.state.sort,\n          updateSort: this.updateSort,\n          currentFilter: this.state.filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), mess_cards]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FilterModal, {\n        currentFilter: this.state.filter,\n        updateFilter: this.updateFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default mess;","map":{"version":3,"sources":["C:/xampp/htdocs/PGLife/PG-Life-main/react-app/src/mess.js"],"names":["React","Component","FilterBar","FilterModal","messCard","Nomess","base_path","mess","state","messes","sort","filter","gender","isEditing","toggleInterested","mess_id","fetch","then","response","json","responseData","success","console","log","updateInterested","is_logged_in","window","$","modal","catch","error","updated_messes","forEach","id","is_interested","interested_users_count","setState","updateSort","updateFilter","componentDidMount","search","location","params","URLSearchParams","city_name","get","render","a","b","rent","mess_cards","length","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FilterBar from './FilterBar';\r\nimport FilterModal from './FilterModal';\r\nimport messCard from './messCard';\r\nimport Nomess from './Nomess';\r\nimport { base_path } from './utils.js';\r\n\r\nclass mess extends Component {\r\n\r\n    state = {\r\n        messes: [],\r\n        sort: \"none\",\r\n        filter: {\r\n            gender: \"none\"\r\n        } ,\r\n        isEditing: false\r\n    };\r\n    componentDidMount() {\r\n        const search = window.location.search;//return query string part of url including ?\r\n        const params = new URLSearchParams(search);//API to convert search query to object\r\n        const city_name = params.get('city');\r\n\r\n        fetch(`${base_path}/api/get_messes_by_city.php?city=${city_name}`)//API to fetch messes object it returns a promise\r\n            .then(response => response.json())//response.json() is an api which parse the response to object . it also returns a promise\r\n            .then(responseData => {\r\n                this.setState({\r\n                    messes: responseData\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    toggleInterested = mess_id => {\r\n        fetch(`${base_path}/api/toggle_interested_mess.php?mess_id=${mess_id}`)\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                if (responseData.success) {\r\n                    console.log('Success');\r\n                    this.updateInterested(mess_id);\r\n                } else if (!responseData.success && !responseData.is_logged_in) {\r\n                    console.log('Not logged in!');\r\n                    window.$(\"#login-modal\").modal(\"show\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    updateInterested = mess_id => {\r\n        let updated_messes = [...this.state.messes];\r\n        updated_messes.forEach((mess) => {\r\n            if (mess.id === mess_id) {\r\n                mess.is_interested = !mess.is_interested;\r\n                if (mess.is_interested) {\r\n                    mess.interested_users_count++;\r\n                } else {\r\n                    mess.interested_users_count--;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            messes: updated_messes\r\n        });\r\n    }\r\n\r\n    updateSort = sort => {\r\n        this.setState({\r\n            sort: sort\r\n        });\r\n    }\r\n\r\n    updateFilter = gender => {\r\n        this.setState({\r\n            filter: {\r\n                gender: gender\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let messes = [...this.state.messes];\r\n\r\n        // Sorting\r\n        if (this.state.sort !== \"none\") {\r\n            if (this.state.sort === \"desc\") {\r\n                messes.sort((a, b) => b.rent - a.rent);\r\n            } else {\r\n                messes.sort((a, b) => a.rent - b.rent);\r\n            }\r\n        }\r\n\r\n        // Filter\r\n        if (this.state.filter.gender !== \"none\") {\r\n            messes = messes.filter(mess =>\r\n                mess.gender === this.state.filter.gender\r\n            );\r\n        }\r\n\r\n        let mess_cards;\r\n        if (messes.length > 0) {\r\n            mess_cards = messes.map(mess =>\r\n                <messCard\r\n                    key={mess.id}\r\n                    mess={mess}\r\n                    toggleInterested={() => this.toggleInterested(mess.id)}\r\n                />\r\n            );\r\n        } else {\r\n            mess_cards = <Nomess />;\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className=\"page-container\">\r\n                    <FilterBar\r\n                        currentSort={this.state.sort}\r\n                        updateSort={this.updateSort}\r\n                        currentFilter={this.state.filter}\r\n                    />\r\n\r\n                    {mess_cards}\r\n                </div>\r\n\r\n                <FilterModal\r\n                    currentFilter={this.state.filter}\r\n                    updateFilter={this.updateFilter}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default mess;\r\n"]},"metadata":{},"sourceType":"module"}