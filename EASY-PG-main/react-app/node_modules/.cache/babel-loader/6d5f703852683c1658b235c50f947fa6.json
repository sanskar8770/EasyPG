{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\PGLife\\\\PG-Life-main\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import FilterBar from './FilterBar';\n// import FilterModal from './FilterModal';\n// import PropertyCard from './PropertyCard';\n// import NoProperty from './NoProperty';\n\nimport { base_path } from './utils.js';\nimport pg from './pg';\nimport mess from './mess';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // state = {\n  //     properties: [],\n  //     sort: \"none\",\n  //     filter: {\n  //         gender: \"none\"\n  //     }\n  // };\n  // componentDidMount() {\n  //     const search = window.location.search;//return query string part of url including ?\n  //     const params = new URLSearchParams(search);//API to convert search query to object\n  //     const city_name = params.get('city');\n  //     fetch(`${base_path}/api/get_properties_by_city.php?city=${city_name}`)//API to fetch properties object it returns a promise\n  //         .then(response => response.json())//response.json() is an api which parse the response to object . it also returns a promise\n  //         .then(responseData => {\n  //             this.setState({\n  //                 properties: responseData\n  //             });\n  //         })\n  //         .catch(error => {\n  //             console.log('Error fetching and parsing data', error);\n  //         });\n  // }\n  // toggleInterested = property_id => {\n  //     fetch(`${base_path}/api/toggle_interested.php?property_id=${property_id}`)\n  //         .then(response => response.json())\n  //         .then(responseData => {\n  //             if (responseData.success) {\n  //                 console.log('Success');\n  //                 this.updateInterested(property_id);\n  //             } else if (!responseData.success && !responseData.is_logged_in) {\n  //                 console.log('Not logged in!');\n  //                 window.$(\"#login-modal\").modal(\"show\");\n  //             }\n  //         })\n  //         .catch(error => {\n  //             console.log('Error fetching and parsing data', error);\n  //         });\n  // }\n  // updateInterested = property_id => {\n  //     let updated_properties = [...this.state.properties];\n  //     updated_properties.forEach((property) => {\n  //         if (property.id === property_id) {\n  //             property.is_interested = !property.is_interested;\n  //             if (property.is_interested) {\n  //                 property.interested_users_count++;\n  //             } else {\n  //                 property.interested_users_count--;\n  //             }\n  //         }\n  //     });\n  //     this.setState({\n  //         properties: updated_properties\n  //     });\n  // }\n  // updateSort = sort => {\n  //     this.setState({\n  //         sort: sort\n  //     });\n  // }\n  // updateFilter = gender => {\n  //     this.setState({\n  //         filter: {\n  //             gender: gender\n  //         }\n  //     });\n  // }\n  render() {\n    // let properties = [...this.state.properties];\n    // // Sorting\n    // if (this.state.sort !== \"none\") {\n    //     if (this.state.sort === \"desc\") {\n    //         properties.sort((a, b) => b.rent - a.rent);\n    //     } else {\n    //         properties.sort((a, b) => a.rent - b.rent);\n    //     }\n    // }\n    // // Filter\n    // if (this.state.filter.gender !== \"none\") {\n    //     properties = properties.filter(property =>\n    //         property.gender === this.state.filter.gender\n    //     );\n    // }\n    // let property_cards;\n    // if (properties.length > 0) {\n    //     property_cards = properties.map(property =>\n    //         <PropertyCard\n    //             key={property.id}\n    //             property={property}\n    //             toggleInterested={() => this.toggleInterested(property.id)}\n    //         />\n    //     );\n    // } else {\n    //     property_cards = <NoProperty />;\n    // }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"pg\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"mess\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/PGLife/PG-Life-main/react-app/src/App.js"],"names":["React","Component","base_path","pg","mess","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAK,EAAAA,MAAM,GAAG;AACL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,wBACI;AAAA,8BAeI;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA,oBADJ;AAoBH;;AAjIuB;;AAoI5B,eAAeD,GAAf","sourcesContent":["import React, { Component } from 'react';\n//import FilterBar from './FilterBar';\n// import FilterModal from './FilterModal';\n// import PropertyCard from './PropertyCard';\n// import NoProperty from './NoProperty';\nimport { base_path } from './utils.js';\nimport pg from './pg';\nimport mess from './mess';\nclass App extends Component {\n\n    // state = {\n    //     properties: [],\n    //     sort: \"none\",\n    //     filter: {\n    //         gender: \"none\"\n    //     }\n    // };\n\n    // componentDidMount() {\n    //     const search = window.location.search;//return query string part of url including ?\n    //     const params = new URLSearchParams(search);//API to convert search query to object\n    //     const city_name = params.get('city');\n\n    //     fetch(`${base_path}/api/get_properties_by_city.php?city=${city_name}`)//API to fetch properties object it returns a promise\n    //         .then(response => response.json())//response.json() is an api which parse the response to object . it also returns a promise\n    //         .then(responseData => {\n    //             this.setState({\n    //                 properties: responseData\n    //             });\n    //         })\n    //         .catch(error => {\n    //             console.log('Error fetching and parsing data', error);\n    //         });\n    // }\n\n    // toggleInterested = property_id => {\n    //     fetch(`${base_path}/api/toggle_interested.php?property_id=${property_id}`)\n    //         .then(response => response.json())\n    //         .then(responseData => {\n    //             if (responseData.success) {\n    //                 console.log('Success');\n    //                 this.updateInterested(property_id);\n    //             } else if (!responseData.success && !responseData.is_logged_in) {\n    //                 console.log('Not logged in!');\n    //                 window.$(\"#login-modal\").modal(\"show\");\n    //             }\n    //         })\n    //         .catch(error => {\n    //             console.log('Error fetching and parsing data', error);\n    //         });\n    // }\n\n    // updateInterested = property_id => {\n    //     let updated_properties = [...this.state.properties];\n    //     updated_properties.forEach((property) => {\n    //         if (property.id === property_id) {\n    //             property.is_interested = !property.is_interested;\n    //             if (property.is_interested) {\n    //                 property.interested_users_count++;\n    //             } else {\n    //                 property.interested_users_count--;\n    //             }\n    //         }\n    //     });\n\n    //     this.setState({\n    //         properties: updated_properties\n    //     });\n    // }\n\n    // updateSort = sort => {\n    //     this.setState({\n    //         sort: sort\n    //     });\n    // }\n\n    // updateFilter = gender => {\n    //     this.setState({\n    //         filter: {\n    //             gender: gender\n    //         }\n    //     });\n    // }\n\n    render() {\n        // let properties = [...this.state.properties];\n\n        // // Sorting\n        // if (this.state.sort !== \"none\") {\n        //     if (this.state.sort === \"desc\") {\n        //         properties.sort((a, b) => b.rent - a.rent);\n        //     } else {\n        //         properties.sort((a, b) => a.rent - b.rent);\n        //     }\n        // }\n\n        // // Filter\n        // if (this.state.filter.gender !== \"none\") {\n        //     properties = properties.filter(property =>\n        //         property.gender === this.state.filter.gender\n        //     );\n        // }\n\n        // let property_cards;\n        // if (properties.length > 0) {\n        //     property_cards = properties.map(property =>\n        //         <PropertyCard\n        //             key={property.id}\n        //             property={property}\n        //             toggleInterested={() => this.toggleInterested(property.id)}\n        //         />\n        //     );\n        // } else {\n        //     property_cards = <NoProperty />;\n        // }\n\n\n        return (\n            <>\n                {/* // <div className=\"page-container\">\n                //     <FilterBar\n                //         currentSort={this.state.sort}\n                //         updateSort={this.updateSort}\n                //         currentFilter={this.state.filter}\n                //     />\n\n                //     {property_cards}\n                // </div>\n\n                // <FilterModal\n                //     currentFilter={this.state.filter}\n                //     updateFilter={this.updateFilter}\n                // /> */}\n                <pg/>\n                <mess/>\n            </>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}