{"ast":null,"code":"import _toConsumableArray from\"C:/xampp/htdocs/EasyPG/EASY-PG-main/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:/xampp/htdocs/EasyPG/EASY-PG-main/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/xampp/htdocs/EasyPG/EASY-PG-main/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/xampp/htdocs/EasyPG/EASY-PG-main/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/xampp/htdocs/EasyPG/EASY-PG-main/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import FilterBar from'./FilterBar';import FilterModal from'./FilterModal';import messCard from'./messCard';import Nomess from'./Nomess';import{base_path}from'./utils.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var mess=/*#__PURE__*/function(_Component){_inherits(mess,_Component);var _super=_createSuper(mess);function mess(){var _this;_classCallCheck(this,mess);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={messes:[],sort:\"none\",filter:{gender:\"none\"}// isEditing: false\n};_this.toggleInterested=function(mess_id){fetch(\"\".concat(base_path,\"/api/toggle_interested_mess.php?mess_id=\").concat(mess_id)).then(function(response){return response.json();}).then(function(responseData){if(responseData.success){console.log('Success');_this.updateInterested(mess_id);}else if(!responseData.success&&!responseData.is_logged_in){console.log('Not logged in!');window.$(\"#login-modal\").modal(\"show\");}}).catch(function(error){console.log('Error fetching and parsing data',error);});};_this.updateInterested=function(mess_id){var updated_messes=_toConsumableArray(_this.state.messes);updated_messes.forEach(function(_mess){if(_mess.id===mess_id){_mess.is_interested=!_mess.is_interested;if(_mess.is_interested){_mess.interested_users_count++;}else{_mess.interested_users_count--;}}});_this.setState({messes:updated_messes});};_this.updateSort=function(sort){_this.setState({sort:sort});};_this.updateFilter=function(gender){_this.setState({filter:{gender:gender}});};return _this;}_createClass(mess,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var search=window.location.search;//return query string part of url including ?\nvar params=new URLSearchParams(search);//API to convert search query to object\nvar city_name=params.get('city');fetch(\"\".concat(base_path,\"/api/get_messes_by_city.php?city=\").concat(city_name))//API to fetch messes object it returns a promise\n.then(function(response){return response.json();})//response.json() is an api which parse the response to object . it also returns a promise\n.then(function(responseData){_this2.setState({messes:responseData});}).catch(function(error){console.log('Error fetching and parsing data',error);});}},{key:\"render\",value:function render(){var _this3=this;var messes=_toConsumableArray(this.state.messes);// Sorting\nif(this.state.sort!==\"none\"){if(this.state.sort===\"desc\"){messes.sort(function(a,b){return b.rent-a.rent;});}else{messes.sort(function(a,b){return a.rent-b.rent;});}}// Filter\nif(this.state.filter.gender!==\"none\"){messes=messes.filter(function(_mess2){return _mess2.gender===_this3.state.filter.gender;});}var mess_cards;if(messes.length>0){mess_cards=messes.map(function(_mess3){return/*#__PURE__*/_jsx(\"messCard\",{mess:_mess3// isEditing={this.state.isEditing}\n,toggleInterested:function toggleInterested(){return _this3.toggleInterested(_mess3.id);}},_mess3.id);});}else{mess_cards=/*#__PURE__*/_jsx(Nomess,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-container\",children:[/*#__PURE__*/_jsx(FilterBar,{currentSort:this.state.sort,updateSort:this.updateSort,currentFilter:this.state.filter}),mess_cards]}),/*#__PURE__*/_jsx(FilterModal,{currentFilter:this.state.filter,updateFilter:this.updateFilter})]});}}]);return mess;}(Component);export default mess;","map":{"version":3,"sources":["C:/xampp/htdocs/EasyPG/EASY-PG-main/react-app/src/mess.js"],"names":["React","Component","FilterBar","FilterModal","messCard","Nomess","base_path","mess","state","messes","sort","filter","gender","toggleInterested","mess_id","fetch","then","response","json","responseData","success","console","log","updateInterested","is_logged_in","window","$","modal","catch","error","updated_messes","forEach","id","is_interested","interested_users_count","setState","updateSort","updateFilter","search","location","params","URLSearchParams","city_name","get","a","b","rent","mess_cards","length","map"],"mappings":"4yBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,SAAT,KAA0B,YAA1B,C,gJAEMC,CAAAA,I,mTAEFC,K,CAAQ,CACJC,MAAM,CAAE,EADJ,CAEJC,IAAI,CAAE,MAFF,CAGJC,MAAM,CAAE,CACJC,MAAM,CAAE,MADJ,CAGT;AANK,C,OAyBRC,gB,CAAmB,SAAAC,OAAO,CAAI,CAC1BC,KAAK,WAAIT,SAAJ,oDAAwDQ,OAAxD,EAAL,CACKE,IADL,CACU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADlB,EAEKF,IAFL,CAEU,SAAAG,YAAY,CAAI,CAClB,GAAIA,YAAY,CAACC,OAAjB,CAA0B,CACtBC,OAAO,CAACC,GAAR,CAAY,SAAZ,EACA,MAAKC,gBAAL,CAAsBT,OAAtB,EACH,CAHD,IAGO,IAAI,CAACK,YAAY,CAACC,OAAd,EAAyB,CAACD,YAAY,CAACK,YAA3C,CAAyD,CAC5DH,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACAG,MAAM,CAACC,CAAP,CAAS,cAAT,EAAyBC,KAAzB,CAA+B,MAA/B,EACH,CACJ,CAVL,EAWKC,KAXL,CAWW,SAAAC,KAAK,CAAI,CACZR,OAAO,CAACC,GAAR,CAAY,iCAAZ,CAA+CO,KAA/C,EACH,CAbL,EAcH,C,OAEDN,gB,CAAmB,SAAAT,OAAO,CAAI,CAC1B,GAAIgB,CAAAA,cAAc,oBAAO,MAAKtB,KAAL,CAAWC,MAAlB,CAAlB,CACAqB,cAAc,CAACC,OAAf,CAAuB,SAACxB,KAAD,CAAU,CAC7B,GAAIA,KAAI,CAACyB,EAAL,GAAYlB,OAAhB,CAAyB,CACrBP,KAAI,CAAC0B,aAAL,CAAqB,CAAC1B,KAAI,CAAC0B,aAA3B,CACA,GAAI1B,KAAI,CAAC0B,aAAT,CAAwB,CACpB1B,KAAI,CAAC2B,sBAAL,GACH,CAFD,IAEO,CACH3B,KAAI,CAAC2B,sBAAL,GACH,CACJ,CACJ,CATD,EAYA,MAAKC,QAAL,CAAc,CACV1B,MAAM,CAAEqB,cADE,CAAd,EAGH,C,OAEDM,U,CAAa,SAAA1B,IAAI,CAAI,CACjB,MAAKyB,QAAL,CAAc,CACVzB,IAAI,CAAEA,IADI,CAAd,EAGH,C,OAQD2B,Y,CAAe,SAAAzB,MAAM,CAAI,CACrB,MAAKuB,QAAL,CAAc,CACVxB,MAAM,CAAE,CACJC,MAAM,CAAEA,MADJ,CADE,CAAd,EAKH,C,iEAvED,4BAAoB,iBAChB,GAAM0B,CAAAA,MAAM,CAAGb,MAAM,CAACc,QAAP,CAAgBD,MAA/B,CAAsC;AACtC,GAAME,CAAAA,MAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoBH,MAApB,CAAf,CAA2C;AAC3C,GAAMI,CAAAA,SAAS,CAAGF,MAAM,CAACG,GAAP,CAAW,MAAX,CAAlB,CAEA5B,KAAK,WAAIT,SAAJ,6CAAiDoC,SAAjD,EAA6D;AAAlE,CACK1B,IADL,CACU,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADlB,CACsC;AADtC,CAEKF,IAFL,CAEU,SAAAG,YAAY,CAAI,CAClB,MAAI,CAACgB,QAAL,CAAc,CACV1B,MAAM,CAAEU,YADE,CAAd,EAGH,CANL,EAOKS,KAPL,CAOW,SAAAC,KAAK,CAAI,CACZR,OAAO,CAACC,GAAR,CAAY,iCAAZ,CAA+CO,KAA/C,EACH,CATL,EAUH,C,sBA0DD,iBAAS,iBACL,GAAIpB,CAAAA,MAAM,oBAAO,KAAKD,KAAL,CAAWC,MAAlB,CAAV,CAEA;AACA,GAAI,KAAKD,KAAL,CAAWE,IAAX,GAAoB,MAAxB,CAAgC,CAC5B,GAAI,KAAKF,KAAL,CAAWE,IAAX,GAAoB,MAAxB,CAAgC,CAC5BD,MAAM,CAACC,IAAP,CAAY,SAACkC,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAACC,IAAF,CAASF,CAAC,CAACE,IAArB,EAAZ,EACH,CAFD,IAEO,CACHrC,MAAM,CAACC,IAAP,CAAY,SAACkC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACE,IAAF,CAASD,CAAC,CAACC,IAArB,EAAZ,EACH,CACJ,CAED;AACA,GAAI,KAAKtC,KAAL,CAAWG,MAAX,CAAkBC,MAAlB,GAA6B,MAAjC,CAAyC,CACrCH,MAAM,CAAGA,MAAM,CAACE,MAAP,CAAc,SAAAJ,MAAI,QACvBA,CAAAA,MAAI,CAACK,MAAL,GAAgB,MAAI,CAACJ,KAAL,CAAWG,MAAX,CAAkBC,MADX,EAAlB,CAAT,CAGH,CAED,GAAImC,CAAAA,UAAJ,CACA,GAAItC,MAAM,CAACuC,MAAP,CAAgB,CAApB,CAAuB,CACnBD,UAAU,CAAGtC,MAAM,CAACwC,GAAP,CAAW,SAAA1C,MAAI,qBACxB,iBAEI,IAAI,CAAEA,MACN;AAHJ,CAII,gBAAgB,CAAE,kCAAM,CAAA,MAAI,CAACM,gBAAL,CAAsBN,MAAI,CAACyB,EAA3B,CAAN,EAJtB,EACSzB,MAAI,CAACyB,EADd,CADwB,EAAf,CAAb,CAQH,CATD,IASO,CACHe,UAAU,cAAG,KAAC,MAAD,IAAb,CACH,CAGD,mBACI,wCACI,aAAK,SAAS,CAAC,gBAAf,wBACI,KAAC,SAAD,EACI,WAAW,CAAE,KAAKvC,KAAL,CAAWE,IAD5B,CAEI,UAAU,CAAE,KAAK0B,UAFrB,CAGI,aAAa,CAAE,KAAK5B,KAAL,CAAWG,MAH9B,EADJ,CAOKoC,UAPL,GADJ,cAWI,KAAC,WAAD,EACI,aAAa,CAAE,KAAKvC,KAAL,CAAWG,MAD9B,CAEI,YAAY,CAAE,KAAK0B,YAFvB,EAXJ,GADJ,CAkBH,C,kBAvIcpC,S,EA0InB,cAAeM,CAAAA,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport FilterBar from './FilterBar';\r\nimport FilterModal from './FilterModal';\r\nimport messCard from './messCard';\r\nimport Nomess from './Nomess';\r\nimport { base_path } from './utils.js';\r\n\r\nclass mess extends Component {\r\n\r\n    state = {\r\n        messes: [],\r\n        sort: \"none\",\r\n        filter: {\r\n            gender: \"none\"\r\n        } \r\n       // isEditing: false\r\n    };\r\n    componentDidMount() {\r\n        const search = window.location.search;//return query string part of url including ?\r\n        const params = new URLSearchParams(search);//API to convert search query to object\r\n        const city_name = params.get('city');\r\n\r\n        fetch(`${base_path}/api/get_messes_by_city.php?city=${city_name}`)//API to fetch messes object it returns a promise\r\n            .then(response => response.json())//response.json() is an api which parse the response to object . it also returns a promise\r\n            .then(responseData => {\r\n                this.setState({\r\n                    messes: responseData\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    toggleInterested = mess_id => {\r\n        fetch(`${base_path}/api/toggle_interested_mess.php?mess_id=${mess_id}`)\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                if (responseData.success) {\r\n                    console.log('Success');\r\n                    this.updateInterested(mess_id);\r\n                } else if (!responseData.success && !responseData.is_logged_in) {\r\n                    console.log('Not logged in!');\r\n                    window.$(\"#login-modal\").modal(\"show\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    updateInterested = mess_id => {\r\n        let updated_messes = [...this.state.messes];\r\n        updated_messes.forEach((mess) => {\r\n            if (mess.id === mess_id) {\r\n                mess.is_interested = !mess.is_interested;\r\n                if (mess.is_interested) {\r\n                    mess.interested_users_count++;\r\n                } else {\r\n                    mess.interested_users_count--;\r\n                }\r\n            }\r\n        });\r\n    \r\n\r\n        this.setState({\r\n            messes: updated_messes\r\n        });\r\n    }\r\n\r\n    updateSort = sort => {\r\n        this.setState({\r\n            sort: sort\r\n        });\r\n    }\r\n    // setMenu=menu =>{\r\n    //     this.setState({\r\n    //         menu: menu\r\n    //     });\r\n    // }\r\n    //updateMenu=Event =>\r\n\r\n    updateFilter = gender => {\r\n        this.setState({\r\n            filter: {\r\n                gender: gender\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let messes = [...this.state.messes];\r\n\r\n        // Sorting\r\n        if (this.state.sort !== \"none\") {\r\n            if (this.state.sort === \"desc\") {\r\n                messes.sort((a, b) => b.rent - a.rent);\r\n            } else {\r\n                messes.sort((a, b) => a.rent - b.rent);\r\n            }\r\n        }\r\n\r\n        // Filter\r\n        if (this.state.filter.gender !== \"none\") {\r\n            messes = messes.filter(mess =>\r\n                mess.gender === this.state.filter.gender\r\n            );\r\n        }\r\n\r\n        let mess_cards;\r\n        if (messes.length > 0) {\r\n            mess_cards = messes.map(mess =>\r\n                <messCard\r\n                    key={mess.id}\r\n                    mess={mess}\r\n                    // isEditing={this.state.isEditing}\r\n                    toggleInterested={() => this.toggleInterested(mess.id)}\r\n                />\r\n            );\r\n        } else {\r\n            mess_cards = <Nomess />;\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className=\"page-container\">\r\n                    <FilterBar\r\n                        currentSort={this.state.sort}\r\n                        updateSort={this.updateSort}\r\n                        currentFilter={this.state.filter}\r\n                    />\r\n\r\n                    {mess_cards}\r\n                </div>\r\n\r\n                <FilterModal\r\n                    currentFilter={this.state.filter}\r\n                    updateFilter={this.updateFilter}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default mess;\r\n"]},"metadata":{},"sourceType":"module"}