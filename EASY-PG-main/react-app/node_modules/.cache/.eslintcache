[{"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\index.js":"1","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\App.js":"2","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\utils.js":"3","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\pg.js":"4","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\mess.js":"5","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\FilterBar.js":"6","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\FilterModal.js":"7","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\messCard.js":"8","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\Nomess.js":"9","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\PropertyCard.js":"10","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\NoProperty.js":"11","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\Stars.js":"12","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\Interested.js":"13","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\MessCard.js":"14","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\Pg.js":"15","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\Mess.js":"16","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\MessCard2.js":"17"},{"size":199,"mtime":1662998284541,"results":"18","hashOfConfig":"19"},{"size":490,"mtime":1662998284541,"results":"20","hashOfConfig":"19"},{"size":157,"mtime":1674133770385,"results":"21","hashOfConfig":"19"},{"size":4382,"mtime":1661024964693,"results":"22","hashOfConfig":"23"},{"size":4444,"mtime":1662975144795,"results":"24","hashOfConfig":"23"},{"size":1057,"mtime":1643571108319,"results":"25","hashOfConfig":"19"},{"size":2313,"mtime":1643571108395,"results":"26","hashOfConfig":"19"},{"size":5344,"mtime":1662974663558,"results":"27","hashOfConfig":"19"},{"size":208,"mtime":1661529300718,"results":"28","hashOfConfig":"19"},{"size":2778,"mtime":1661591160872,"results":"29","hashOfConfig":"19"},{"size":202,"mtime":1643571108541,"results":"30","hashOfConfig":"19"},{"size":599,"mtime":1643571108650,"results":"31","hashOfConfig":"19"},{"size":647,"mtime":1643571108465,"results":"32","hashOfConfig":"19"},{"size":5750,"mtime":1674310249548,"results":"33","hashOfConfig":"19"},{"size":4382,"mtime":1662975608988,"results":"34","hashOfConfig":"19"},{"size":5988,"mtime":1674136518498,"results":"35","hashOfConfig":"19"},{"size":5779,"mtime":1674133723838,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ufds1k",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"308rp5",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\index.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\App.js",["74","75"],"import React, { Component } from 'react';\n//import FilterBar from './FilterBar';\n// import FilterModal from './FilterModal';\n// import PropertyCard from './PropertyCard';\n// import NoProperty from './NoProperty';\nimport { base_path } from './utils.js';\nimport Pg from './Pg';\nimport Mess from './Mess';\nclass App extends Component {\n\n    render() {\n        return (\n            <>\n                {/* <Pg/> */}\n                <Mess/>\n            </>\n        )\n    }\n}\n\nexport default App;\n","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\utils.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\pg.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\mess.js",["76","77"],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\FilterBar.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\FilterModal.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\messCard.js",["78","79","80"],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\Nomess.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\PropertyCard.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\NoProperty.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\Stars.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\Interested.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\MessCard.js",["81"],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\Pg.js",[],"C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\Mess.js",["82","83","84"],"import React, { Component } from 'react';\r\nimport FilterBar from './FilterBar';\r\nimport FilterModal from './FilterModal';\r\nimport MessCard from './MessCard';\r\nimport MessCard2 from './MessCard2';\r\nimport Nomess from './Nomess';\r\nimport { base_path } from './utils.js';\r\n\r\nclass mess extends Component {\r\n\r\n    state = {\r\n        messes: [],\r\n        sort: \"none\",\r\n        filter: {\r\n            gender: \"none\"\r\n        } \r\n       // isEditing: false\r\n    };\r\n    componentDidMount() {\r\n        const search = window.location.search;//return query string part of url including ?\r\n        const params = new URLSearchParams(search);//API to convert search query to object\r\n        const city_name = params.get('city');\r\n\r\n        fetch(`${base_path}/api/get_messes_by_city.php?city=${city_name}`)//API to fetch messes object it returns a promise\r\n            .then(response => response.json())//response.json() is an api which parse the response to object . it also returns a promise\r\n            .then(responseData => {\r\n                this.setState({\r\n                    messes: responseData\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    toggleInterested = mess_id => {\r\n        fetch(`${base_path}/api/toggle_interested_mess.php?mess_id=${mess_id}`)\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                if (responseData.success) {\r\n                    console.log('Success');\r\n                    this.updateInterested(mess_id);\r\n                } else if (!responseData.success && !responseData.is_logged_in) {\r\n                    console.log('Not logged in!');\r\n                    window.$(\"#login-modal\").modal(\"show\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    updateInterested = mess_id => {\r\n        let updated_messes = [...this.state.messes];\r\n        updated_messes.forEach((mess) => {\r\n            if (mess.id === mess_id) {\r\n                mess.is_interested = !mess.is_interested;\r\n                if (mess.is_interested) {\r\n                    mess.interested_users_count++;\r\n                } else {\r\n                    mess.interested_users_count--;\r\n                }\r\n            }\r\n        });\r\n    \r\n\r\n        this.setState({\r\n            messes: updated_messes\r\n        });\r\n    }\r\n\r\n    updateSort = sort => {\r\n        this.setState({\r\n            sort: sort\r\n        });\r\n    }\r\n    // setMenu=menu =>{\r\n    //     this.setState({\r\n    //         menu: menu\r\n    //     });\r\n    // }\r\n    //updateMenu=Event =>\r\n\r\n    updateFilter = gender => {\r\n        this.setState({\r\n            filter: {\r\n                gender: gender\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let messes = [...this.state.messes];\r\n\r\n        // Sorting\r\n        if (this.state.sort !== \"none\") {\r\n            if (this.state.sort === \"desc\") {\r\n                messes.sort((a, b) => b.rent - a.rent);\r\n            } else {\r\n                messes.sort((a, b) => a.rent - b.rent);\r\n            }\r\n        }\r\n\r\n        // Filter\r\n        if (this.state.filter.gender !== \"none\") {\r\n            messes = messes.filter(mess =>\r\n                mess.gender === this.state.filter.gender\r\n            );\r\n        }\r\n\r\n        let mess_cards,mess_cards2;\r\n        if (messes.length > 0) {\r\n            mess_cards = messes.filter(mess=>\r\n                mess.is_owner).map(mess =>\r\n                \r\n                    // if(mess.is_owner){\r\n                        <MessCard\r\n                        key={mess.id}\r\n                        mess={mess}\r\n                        // isEditing={this.state.isEditing}\r\n                        toggleInterested={() => this.toggleInterested(mess.id)}\r\n                        />\r\n                    // }\r\n                    // else{\r\n                    //     <MessCard2\r\n                    //     key={mess.id}\r\n                    //     mess={mess}\r\n                    //     // isEditing={this.state.isEditing}\r\n                    //     toggleInterested={() => this.toggleInterested(mess.id)}\r\n                    //     />\r\n                    // }\r\n                \r\n            \r\n               \r\n            );\r\n            mess_cards2 = messes.filter(mess=>\r\n                mess.is_owner==false).map(mess =>\r\n                \r\n                    // if(mess.is_owner){\r\n                        <MessCard2\r\n                        key={mess.id}\r\n                        mess={mess}\r\n                        // isEditing={this.state.isEditing}\r\n                        toggleInterested={() => this.toggleInterested(mess.id)}\r\n                        />\r\n                    // }\r\n                    // else{\r\n                    //     <MessCard2\r\n                    //     key={mess.id}\r\n                    //     mess={mess}\r\n                    //     // isEditing={this.state.isEditing}\r\n                    //     toggleInterested={() => this.toggleInterested(mess.id)}\r\n                    //     />\r\n                    // }\r\n                \r\n            \r\n               \r\n            );\r\n        } else {\r\n            mess_cards = <Nomess />;\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className=\"page-container\">\r\n                    {/* <FilterBar\r\n                        currentSort={this.state.sort}\r\n                        updateSort={this.updateSort}\r\n                        currentFilter={this.state.filter}\r\n                    /> */}\r\n\r\n                    {mess_cards}\r\n                    {mess_cards2}\r\n                </div>\r\n\r\n                {/* <FilterModal\r\n                    currentFilter={this.state.filter}\r\n                    updateFilter={this.updateFilter}\r\n                /> */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default mess;\r\n","C:\\xampp\\htdocs\\EasyPG\\EASY-PG-main\\react-app\\src\\MessCard2.js",["85","86"],"import React, {useState} from \"react\"; \r\nimport Stars from './Stars';\r\nimport Interested from './Interested';\r\nimport { base_path } from './utils.js';\r\n\r\nconst MessCard= props => {\r\n    // let den=0;\r\n    // if(props.mess.rating_clean!==0)\r\n    // den++;\r\n    // if(props.mess.rating_food!==0)\r\n    // den++;\r\n    // if(props.mess.rating_safety!==0)\r\n    // den++;\r\n    // if(props.mess.rating_service!==0)\r\n    // den++;\r\n    // if(den==0)\r\n    // den++;\r\n    const [menu,setMenu]= useState(props.mess.menu);\r\n    // let text;\r\n    // if(props.mess.is_owner){\r\n    //     text=<input class=\"form-control form-control-sm\" type=\"text\" value={menu} onChange={updateMenu} /> \r\n    //     // <textarea class=\"form-control\" rows=\"1\" value={menu} onChange={updateMenu}></textarea>\r\n    // }\r\n    // else{\r\n    //     text= <input class=\"form-control form-control-sm\" type=\"text\" placeholder={ props.mess.menu } readOnly={true}/>\r\n    // }\r\n    \r\n    // state= {\r\n    //     menu: props.mess.menu\r\n    // };\r\n    const updateMenu=(event) =>{\r\n            setMenu(event.target.value)\r\n            fetch(`${base_path}/api/update_menu.php?mess_id=${props.mess.id}&menu=${menu}`)\r\n                .then(response => response.json())\r\n                .then(responseData => {\r\n                    if (responseData.success) {\r\n                        console.log('Success');\r\n                        // this.setState({\r\n                        //     menu: event.target.value\r\n                        // });\r\n                        \r\n                    }\r\n                    // } else if (!responseData.success && !responseData.is_logged_in) {\r\n                    //     console.log('Not logged in!');\r\n                    //     window.$(\"#login-modal\").modal(\"show\");\r\n                    // }\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error fetching and parsing data', error);\r\n                });\r\n        \r\n       \r\n    }\r\n    let total_rating = (parseFloat(props.mess.rating_food) +parseFloat(props.mess.rating_service)) / 2;\r\n    total_rating = Math.round(total_rating * 10) / 10;\r\n    total_rating = total_rating.toFixed(1);\r\n\r\n    // let gender_image;\r\n    // if (props.mess.gender === \"male\") {\r\n    //     gender_image = <img src={base_path + \"/img/male.png\"} alt=\"male\" />;\r\n    // } else if (props.mess.gender === \"female\") {\r\n    //     gender_image = <img src={base_path + \"/img/female.png\"} alt=\"female\" />;\r\n    // } else {\r\n    //     gender_image = <img src={base_path + \"/img/unisex.png\"} alt=\"unisex\" />;\r\n    // }\r\n\r\n    let charge = new Intl.NumberFormat().format(props.mess.charge);\r\n    let charge_breakfast = new Intl.NumberFormat().format(props.mess.charge_breakfast);\r\n    let charge_monthly = new Intl.NumberFormat().format(props.mess.charge_monthly);\r\n\r\n    return (\r\n        <div className={`mess-card mess-id-${props.mess.id} row`}>\r\n            <div className=\"image-container col-md-4\">\r\n                <img src={base_path + \"/\" + props.mess.image} alt=\"mess\" />\r\n            </div>\r\n\r\n            <div className=\"content-container col-md-8\">\r\n                <div className=\"row no-gutters justify-content-between\">\r\n                    <Stars rating={total_rating} />\r\n\r\n                    <Interested\r\n                        is_interested={props.mess.is_interested}\r\n                        toggleInterested={props.toggleInterested}\r\n                        user_count={props.mess.interested_users_count}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"detail-container\">\r\n                    <div className=\"mess-name\">{props.mess.name}</div>\r\n                    <div className=\"mess-address\">{props.mess.address}</div>\r\n                    {/* <div className=\"mess-gender\">\r\n                        {gender_image}\r\n                    </div> */}\r\n                </div>\r\n\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Monthly : ₹ {charge_monthly}/-</div>\r\n                        {/* <div className=\"charge-unit\">(includes lunch and dinner)</div> */}\r\n                        \r\n                    </div>\r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Lunch/Dinner : ₹ {charge}/-</div>\r\n                        \r\n                    </div>\r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Breakfast : ₹ {charge_breakfast}/-</div>\r\n                        \r\n                    </div>\r\n                     \r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Menu  \r\n                        {/* {text} */}\r\n                        {/* <input class=\"form-control form-control-sm\" type=\"text\" value={menu} onChange={updateMenu} /> */}\r\n                        <input class=\"form-control form-control-sm\" type=\"text\" placeholder={ props.mess.menu } readOnly={true}/>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    {/* else{\r\n                        <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Menu  \r\n                        \r\n                       \r\n                        </div>\r\n                        \r\n                        </div>\r\n                    }  */}\r\n                    <div className=\"button-container col-6\">\r\n                        <a href=\"#\" className=\"btn btn-primary\">Order</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessCard;\r\n",{"ruleId":"87","severity":1,"message":"88","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":19},{"ruleId":"87","severity":1,"message":"91","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":10},{"ruleId":"87","severity":1,"message":"92","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":17},{"ruleId":"87","severity":1,"message":"93","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":19},{"ruleId":"87","severity":1,"message":"94","line":6,"column":7,"nodeType":"89","messageId":"90","endLine":6,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":121,"column":25,"nodeType":"97","endLine":121,"endColumn":65},{"ruleId":"98","severity":2,"message":"99","line":129,"column":16,"nodeType":"89","messageId":"100","endLine":129,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":132,"column":25,"nodeType":"97","endLine":132,"endColumn":65},{"ruleId":"87","severity":1,"message":"92","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":17},{"ruleId":"87","severity":1,"message":"93","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":137,"column":30,"nodeType":"103","messageId":"104","endLine":137,"endColumn":32},{"ruleId":"87","severity":1,"message":"105","line":31,"column":11,"nodeType":"89","messageId":"90","endLine":31,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":130,"column":25,"nodeType":"97","endLine":130,"endColumn":65},"no-unused-vars","'base_path' is defined but never used.","Identifier","unusedVar","'Pg' is defined but never used.","'FilterBar' is defined but never used.","'FilterModal' is defined but never used.","'MessCard' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-undef","'messCard' is not defined.","undef","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'updateMenu' is assigned a value but never used."]