{"version":3,"sources":["utils.js","FilterBar.js","FilterModal.js","Stars.js","Interested.js","PropertyCard.js","NoProperty.js","Pg.js","MessCard.js","MessCard2.js","Nomess.js","Mess.js","App.js","index.js"],"names":["base_path","FilterBar","props","className","currentFilter","gender","src","alt","currentSort","onClick","updateSort","FilterModal","id","tabIndex","role","type","updateFilter","Stars","star","stars","i","rating","push","title","Interested","heart_image_class","is_interested","toggleInterested","user_count","PropertyCard","den","property","rating_clean","rating_food","rating_safety","rating_service","gender_image","total_rating","parseFloat","Math","round","toFixed","rent","Intl","NumberFormat","format","image","interested_users_count","name","address","href","NoProperty","Component","MessCard","useState","mess","menu","setMenu","charge","charge_breakfast","charge_monthly","class","value","onChange","event","target","fetch","then","response","json","responseData","success","console","log","message","catch","error","placeholder","readOnly","Nomess","state","messes","sort","filter","mess_id","updateInterested","is_logged_in","window","$","modal","updated_messes","forEach","setState","search","location","city_name","URLSearchParams","get","mess_cards","mess_cards2","this","a","b","length","is_owner","map","MessCard2","App","Mess","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99bc49e5.chunk.js","sourcesContent":["// For development use this:\n// export const base_path = \"http://127.0.0.1/EasyPG/EASY-PG-main\";\n\n// For production use this : \nexport const base_path = \".\";","import React from 'react';\nimport { base_path } from './utils.js';\n\nconst FilterBar = props => {\n    return (\n        <div className=\"filter-bar row justify-content-around\">\n            <div className={\"col-auto\" + (props.currentFilter.gender !== \"none\" ? \" sort-active\" : \"\")} data-toggle=\"modal\" data-target=\"#filter-modal\">\n                <img src={base_path + \"/img/filter.png\"} alt=\"filter\" />\n                <span>Filter</span>\n            </div>\n            <div className={\"col-auto\" + (props.currentSort === \"desc\" ? \" sort-active\" : \"\")} onClick={() => props.updateSort(\"desc\")}>\n                <img src={base_path + \"/img/desc.png\"} alt=\"sort-desc\" />\n                <span>Highest rent first</span>\n            </div>\n            <div className={\"col-auto\" + (props.currentSort === \"asc\" ? \" sort-active\" : \"\")} onClick={() => props.updateSort(\"asc\")}>\n                <img src={base_path + \"/img/asc.png\"} alt=\"sort-asc\" />\n                <span>Lowest rent first</span>\n            </div>\n        </div>\n    );\n}\n\nexport default FilterBar;\n","import React from 'react';\n\nconst FilterModal = props => {\n    return (\n        <div className=\"modal fade\" id=\"filter-modal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"filter-heading\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h3 className=\"modal-title\" id=\"filter-heading\">Filters</h3>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n\n                    <div className=\"modal-body\">\n                        <h5>Gender</h5>\n                        <hr />\n                        <div>\n                            <button className={\"btn btn-outline-dark\" + (props.currentFilter.gender === \"none\" ? \" btn-active\" : \"\")} onClick={() => props.updateFilter(\"none\")}>\n                                No Filter\n                            </button>\n                            <button className={\"btn btn-outline-dark\" + (props.currentFilter.gender === \"unisex\" ? \" btn-active\" : \"\")} onClick={() => props.updateFilter(\"unisex\")}>\n                                <i className=\"fas fa-venus-mars\"></i>Unisex\n                            </button>\n                            <button className={\"btn btn-outline-dark\" + (props.currentFilter.gender === \"male\" ? \" btn-active\" : \"\")} onClick={() => props.updateFilter(\"male\")}>\n                                <i className=\"fas fa-mars\"></i>Male\n                            </button>\n                            <button className={\"btn btn-outline-dark\" + (props.currentFilter.gender === \"female\" ? \" btn-active\" : \"\")} onClick={() => props.updateFilter(\"female\")}>\n                                <i className=\"fas fa-venus\"></i>Female\n                            </button>\n                        </div>\n                    </div>\n\n                    <div className=\"modal-footer\">\n                        <button data-dismiss=\"modal\" className=\"btn btn-success\">Okay</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FilterModal;\n","import React from 'react';\n\nconst Stars = props => {\n\n    let stars = [];\n    let star;\n    for (let i = 0; i < 5; i++) {\n        if (props.rating >= i + 0.8) {\n            star = <i className=\"fas fa-star\" key={i}></i>;\n        } else if (props.rating >= i + 0.3) {\n            star = <i className=\"fas fa-star-half-alt\" key={i}></i>;\n        } else {\n            star = <i className=\"far fa-star\" key={i}></i>;\n        }\n\n        stars.push(star);\n    }\n\n    return (\n        <div className=\"star-container\" title={props.rating}>\n            {stars}\n        </div>\n    );\n}\n\nexport default Stars;\n","import React from 'react';\n\nconst Interested = props => {\n\n    let heart_image_class;\n    if (props.is_interested) {\n        heart_image_class = \"fas\";\n    } else {\n        heart_image_class = \"far\";\n    }\n\n    return (\n        <div className=\"interested-container\">\n            <i\n                className={`is-interested-image ${heart_image_class} fa-heart`}\n                onClick={() => props.toggleInterested()}\n            ></i>\n            <div className=\"interested-text\">\n                <span className=\"interested-user-count\">{props.user_count}</span> interested\n            </div>\n        </div>\n    );\n}\n\nexport default Interested;\n","import React from 'react';\nimport Stars from './Stars';\nimport Interested from './Interested';\nimport { base_path } from './utils.js';\n\nconst PropertyCard = props => {\n    let den=0;\n    if(props.property.rating_clean!==0)\n    den++;\n    if(props.property.rating_food!==0)\n    den++;\n    if(props.property.rating_safety!==0)\n    den++;\n    if(props.property.rating_service!==0)\n    den++;\n    if(den===0)\n    den++;\n    let total_rating = (parseFloat(props.property.rating_clean) + parseFloat(props.property.rating_food) + parseFloat(props.property.rating_safety)) / den;\n    total_rating = Math.round(total_rating * 10) / 10;\n    total_rating = total_rating.toFixed(1);\n\n    let gender_image;\n    if (props.property.gender === \"male\") {\n        gender_image = <img src={base_path + \"/img/male.png\"} alt=\"male\" />;\n    } else if (props.property.gender === \"female\") {\n        gender_image = <img src={base_path + \"/img/female.png\"} alt=\"female\" />;\n    } else {\n        gender_image = <img src={base_path + \"/img/unisex.png\"} alt=\"unisex\" />;\n    }\n\n    let rent = new Intl.NumberFormat().format(props.property.rent);\n\n    return (\n        <div className={`property-card property-id-${props.property.id} row`}>\n            <div className=\"image-container col-md-4\">\n                <img src={base_path + \"/\" + props.property.image} alt=\"property\" />\n            </div>\n\n            <div className=\"content-container col-md-8\">\n                <div className=\"row no-gutters justify-content-between\">\n                    <Stars rating={total_rating} />\n\n                    <Interested\n                        is_interested={props.property.is_interested}\n                        toggleInterested={props.toggleInterested}\n                        user_count={props.property.interested_users_count}\n                    />\n                </div>\n\n                <div className=\"detail-container\">\n                    <div className=\"property-name\">{props.property.name}</div>\n                    <div className=\"property-address\">{props.property.address}</div>\n                    <div className=\"property-gender\">\n                        {gender_image}\n                    </div>\n                </div>\n\n                <div className=\"row no-gutters\">\n                    <div className=\"rent-container col-6\">\n                        <div className=\"rent\">₹ {rent}/-</div>\n                        <div className=\"rent-unit\">per month</div>\n                    </div>\n                    <div className=\"button-container col-6\">\n                        <a href={\"property_detail.php?property_id=\" + props.property.id} className=\"btn btn-primary\">View</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PropertyCard;\n","import React from 'react';\n\nconst NoProperty = () => {\n\n    return (\n        <div className=\"no-property-container\">\n            <p>No PG to list</p>\n        </div>\n    );\n}\n\nexport default NoProperty;\n","import React, { Component } from 'react';\r\nimport FilterBar from './FilterBar';\r\nimport FilterModal from './FilterModal';\r\nimport PropertyCard from './PropertyCard';\r\nimport NoProperty from './NoProperty';\r\nimport { base_path } from './utils.js';\r\n\r\nclass pg extends Component {\r\n\r\n    state = {\r\n        properties: [],\r\n        sort: \"none\",\r\n        filter: {\r\n            gender: \"none\"\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const search = window.location.search;//return query string part of url including ?\r\n        const params = new URLSearchParams(search);//API to convert search query to object\r\n        const city_name = params.get('city');\r\n\r\n        fetch(`${base_path}/api/get_properties_by_city.php?city=${city_name}`)//API to fetch properties object it returns a promise\r\n            .then(response => response.json())//response.json() is an api which parse the response to object . it also returns a promise\r\n            .then(responseData => {\r\n                this.setState({\r\n                    properties: responseData\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    toggleInterested = property_id => {\r\n        fetch(`${base_path}/api/toggle_interested.php?property_id=${property_id}`)\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                if (responseData.success) {\r\n                    console.log('Success');\r\n                    this.updateInterested(property_id);\r\n                } else if (!responseData.success && !responseData.is_logged_in) {\r\n                    console.log('Not logged in!');\r\n                    window.$(\"#login-modal\").modal(\"show\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    updateInterested = property_id => {\r\n        let updated_properties = [...this.state.properties];\r\n        updated_properties.forEach((property) => {\r\n            if (property.id === property_id) {\r\n                property.is_interested = !property.is_interested;\r\n                if (property.is_interested) {\r\n                    property.interested_users_count++;\r\n                } else {\r\n                    property.interested_users_count--;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            properties: updated_properties\r\n        });\r\n    }\r\n\r\n    updateSort = sort => {\r\n        this.setState({\r\n            sort: sort\r\n        });\r\n    }\r\n\r\n    updateFilter = gender => {\r\n        this.setState({\r\n            filter: {\r\n                gender: gender\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let properties = [...this.state.properties];\r\n\r\n        // Sorting\r\n        if (this.state.sort !== \"none\") {\r\n            if (this.state.sort === \"desc\") {\r\n                properties.sort((a, b) => b.rent - a.rent);\r\n            } else {\r\n                properties.sort((a, b) => a.rent - b.rent);\r\n            }\r\n        }\r\n\r\n        // Filter\r\n        if (this.state.filter.gender !== \"none\") {\r\n            properties = properties.filter(property =>\r\n                property.gender === this.state.filter.gender\r\n            );\r\n        }\r\n\r\n        let property_cards;\r\n        if (properties.length > 0) {\r\n            property_cards = properties.map(property =>\r\n                <PropertyCard\r\n                    key={property.id}\r\n                    property={property}\r\n                    toggleInterested={() => this.toggleInterested(property.id)}\r\n                />\r\n            );\r\n        } else {\r\n            property_cards = <NoProperty />;\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className=\"page-container\">\r\n                    <FilterBar\r\n                        currentSort={this.state.sort}\r\n                        updateSort={this.updateSort}\r\n                        currentFilter={this.state.filter}\r\n                    />\r\n\r\n                    {property_cards}\r\n                </div>\r\n\r\n                <FilterModal\r\n                    currentFilter={this.state.filter}\r\n                    updateFilter={this.updateFilter}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default pg;","import React, {useState} from \"react\"; \r\nimport Stars from './Stars';\r\nimport Interested from './Interested';\r\nimport { base_path } from './utils.js';\r\n\r\nconst MessCard= props => {\r\n    // let den=0;\r\n    // if(props.mess.rating_clean!==0)\r\n    // den++;\r\n    // if(props.mess.rating_food!==0)\r\n    // den++;\r\n    // if(props.mess.rating_safety!==0)\r\n    // den++;\r\n    // if(props.mess.rating_service!==0)\r\n    // den++;\r\n    // if(den==0)\r\n    // den++;\r\n    const [menu,setMenu]= useState(props.mess.menu);\r\n    // let text;\r\n    // if(props.mess.is_owner){\r\n    //     text=<input class=\"form-control form-control-sm\" type=\"text\" value={menu} onChange={updateMenu} /> \r\n    //     // <textarea class=\"form-control\" rows=\"1\" value={menu} onChange={updateMenu}></textarea>\r\n    // }\r\n    // else{\r\n    //     text= <input class=\"form-control form-control-sm\" type=\"text\" placeholder={ props.mess.menu } readOnly={true}/>\r\n    // }\r\n    \r\n    // state= {\r\n    //     menu: props.mess.menu\r\n    // };\r\n    const updateMenu=(event) =>{\r\n            setMenu(event.target.value)\r\n            fetch(`${base_path}/api/update_menu.php?mess_id=${props.mess.id}&menu=${menu}`)\r\n                .then(response => response.json())\r\n                .then(responseData => {\r\n                    if (responseData.success) {\r\n                        console.log('Success');\r\n                        // this.setState({\r\n                        //     menu: event.target.value\r\n                        // });\r\n                        \r\n                    }\r\n                    else{\r\n                        console.log(responseData.message);\r\n                    }\r\n                    // } else if (!responseData.success && !responseData.is_logged_in) {\r\n                    //     console.log('Not logged in!');\r\n                    //     window.$(\"#login-modal\").modal(\"show\");\r\n                    // }\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error fetching and parsing data', error);\r\n                });\r\n        \r\n       \r\n    }\r\n    let total_rating = (parseFloat(props.mess.rating_food) +parseFloat(props.mess.rating_service)) / 2;\r\n    total_rating = Math.round(total_rating * 10) / 10;\r\n    total_rating = total_rating.toFixed(1);\r\n\r\n    // let gender_image;\r\n    // if (props.mess.gender === \"male\") {\r\n    //     gender_image = <img src={base_path + \"/img/male.png\"} alt=\"male\" />;\r\n    // } else if (props.mess.gender === \"female\") {\r\n    //     gender_image = <img src={base_path + \"/img/female.png\"} alt=\"female\" />;\r\n    // } else {\r\n    //     gender_image = <img src={base_path + \"/img/unisex.png\"} alt=\"unisex\" />;\r\n    // }\r\n\r\n    let charge = new Intl.NumberFormat().format(props.mess.charge);\r\n    let charge_breakfast = new Intl.NumberFormat().format(props.mess.charge_breakfast);\r\n    let charge_monthly = new Intl.NumberFormat().format(props.mess.charge_monthly);\r\n\r\n    return (\r\n        <div className={`mess-card mess-id-${props.mess.id} row`}>\r\n            <div className=\"image-container col-md-4\">\r\n                <img src={base_path + \"/\" + props.mess.image} alt=\"mess\" />\r\n            </div>\r\n\r\n            <div className=\"content-container col-md-8\">\r\n                <div className=\"row no-gutters justify-content-between\">\r\n                    <Stars rating={total_rating} />\r\n\r\n                    <Interested\r\n                        is_interested={props.mess.is_interested}\r\n                        toggleInterested={props.toggleInterested}\r\n                        user_count={props.mess.interested_users_count}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"detail-container\">\r\n                    <div className=\"mess-name\">{props.mess.name}</div>\r\n                    <div className=\"mess-address\">{props.mess.address}</div>\r\n                    {/* <div className=\"mess-gender\">\r\n                        {gender_image}\r\n                    </div> */}\r\n                </div>\r\n\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Monthly : ₹ {charge_monthly}/-</div>\r\n                        {/* <div className=\"charge-unit\">(includes lunch and dinner)</div> */}\r\n                        \r\n                    </div>\r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Lunch/Dinner : ₹ {charge}/-</div>\r\n                        \r\n                    </div>\r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Breakfast : ₹ {charge_breakfast}/-</div>\r\n                        \r\n                    </div>\r\n                     \r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Menu  \r\n                        {/* {text} */}\r\n                        <input class=\"form-control form-control-sm\" type=\"text\" value={menu} onChange={updateMenu} />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    {/* else{\r\n                        <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Menu  \r\n                        \r\n                       \r\n                        </div>\r\n                        \r\n                        </div>\r\n                    }  */}\r\n                    <div className=\"button-container col-6\">\r\n                        <a href=\"#\" className=\"btn btn-primary\">Order</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessCard;\r\n","import React, {useState} from \"react\"; \r\nimport Stars from './Stars';\r\nimport Interested from './Interested';\r\nimport { base_path } from './utils.js';\r\n\r\nconst MessCard= props => {\r\n    // let den=0;\r\n    // if(props.mess.rating_clean!==0)\r\n    // den++;\r\n    // if(props.mess.rating_food!==0)\r\n    // den++;\r\n    // if(props.mess.rating_safety!==0)\r\n    // den++;\r\n    // if(props.mess.rating_service!==0)\r\n    // den++;\r\n    // if(den==0)\r\n    // den++;\r\n    const [menu,setMenu]= useState(props.mess.menu);\r\n    // let text;\r\n    // if(props.mess.is_owner){\r\n    //     text=<input class=\"form-control form-control-sm\" type=\"text\" value={menu} onChange={updateMenu} /> \r\n    //     // <textarea class=\"form-control\" rows=\"1\" value={menu} onChange={updateMenu}></textarea>\r\n    // }\r\n    // else{\r\n    //     text= <input class=\"form-control form-control-sm\" type=\"text\" placeholder={ props.mess.menu } readOnly={true}/>\r\n    // }\r\n    \r\n    // state= {\r\n    //     menu: props.mess.menu\r\n    // };\r\n    const updateMenu=(event) =>{\r\n            setMenu(event.target.value)\r\n            fetch(`${base_path}/api/update_menu.php?mess_id=${props.mess.id}&menu=${menu}`)\r\n                .then(response => response.json())\r\n                .then(responseData => {\r\n                    if (responseData.success) {\r\n                        console.log('Success');\r\n                        // this.setState({\r\n                        //     menu: event.target.value\r\n                        // });\r\n                        \r\n                    }\r\n                    // } else if (!responseData.success && !responseData.is_logged_in) {\r\n                    //     console.log('Not logged in!');\r\n                    //     window.$(\"#login-modal\").modal(\"show\");\r\n                    // }\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error fetching and parsing data', error);\r\n                });\r\n        \r\n       \r\n    }\r\n    let total_rating = (parseFloat(props.mess.rating_food) +parseFloat(props.mess.rating_service)) / 2;\r\n    total_rating = Math.round(total_rating * 10) / 10;\r\n    total_rating = total_rating.toFixed(1);\r\n\r\n    // let gender_image;\r\n    // if (props.mess.gender === \"male\") {\r\n    //     gender_image = <img src={base_path + \"/img/male.png\"} alt=\"male\" />;\r\n    // } else if (props.mess.gender === \"female\") {\r\n    //     gender_image = <img src={base_path + \"/img/female.png\"} alt=\"female\" />;\r\n    // } else {\r\n    //     gender_image = <img src={base_path + \"/img/unisex.png\"} alt=\"unisex\" />;\r\n    // }\r\n\r\n    let charge = new Intl.NumberFormat().format(props.mess.charge);\r\n    let charge_breakfast = new Intl.NumberFormat().format(props.mess.charge_breakfast);\r\n    let charge_monthly = new Intl.NumberFormat().format(props.mess.charge_monthly);\r\n\r\n    return (\r\n        <div className={`mess-card mess-id-${props.mess.id} row`}>\r\n            <div className=\"image-container col-md-4\">\r\n                <img src={base_path + \"/\" + props.mess.image} alt=\"mess\" />\r\n            </div>\r\n\r\n            <div className=\"content-container col-md-8\">\r\n                <div className=\"row no-gutters justify-content-between\">\r\n                    <Stars rating={total_rating} />\r\n\r\n                    <Interested\r\n                        is_interested={props.mess.is_interested}\r\n                        toggleInterested={props.toggleInterested}\r\n                        user_count={props.mess.interested_users_count}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"detail-container\">\r\n                    <div className=\"mess-name\">{props.mess.name}</div>\r\n                    <div className=\"mess-address\">{props.mess.address}</div>\r\n                    {/* <div className=\"mess-gender\">\r\n                        {gender_image}\r\n                    </div> */}\r\n                </div>\r\n\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Monthly : ₹ {charge_monthly}/-</div>\r\n                        {/* <div className=\"charge-unit\">(includes lunch and dinner)</div> */}\r\n                        \r\n                    </div>\r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Lunch/Dinner : ₹ {charge}/-</div>\r\n                        \r\n                    </div>\r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Breakfast : ₹ {charge_breakfast}/-</div>\r\n                        \r\n                    </div>\r\n                     \r\n                    <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Menu  \r\n                        {/* {text} */}\r\n                        {/* <input class=\"form-control form-control-sm\" type=\"text\" value={menu} onChange={updateMenu} /> */}\r\n                        <input class=\"form-control form-control-sm\" type=\"text\" placeholder={ props.mess.menu } readOnly={true}/>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    {/* else{\r\n                        <div className=\"charge-container col-6\">\r\n                        <div className=\"charge\">Menu  \r\n                        \r\n                       \r\n                        </div>\r\n                        \r\n                        </div>\r\n                    }  */}\r\n                    <div className=\"button-container col-6\">\r\n                        <a href=\"#\" className=\"btn btn-primary\">Order</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessCard;\r\n","import React from 'react';\r\n\r\nconst Nomess = () => {\r\n\r\n    return (\r\n        <div className=\"no-property-container\">\r\n            <p>No MESS to list</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nomess;\r\n","import React, { Component } from 'react';\r\nimport FilterBar from './FilterBar';\r\nimport FilterModal from './FilterModal';\r\nimport MessCard from './MessCard';\r\nimport MessCard2 from './MessCard2';\r\nimport Nomess from './Nomess';\r\nimport { base_path } from './utils.js';\r\n\r\nclass mess extends Component {\r\n\r\n    state = {\r\n        messes: [],\r\n        sort: \"none\",\r\n        filter: {\r\n            gender: \"none\"\r\n        } \r\n       // isEditing: false\r\n    };\r\n    componentDidMount() {\r\n        const search = window.location.search;//return query string part of url including ?\r\n        const params = new URLSearchParams(search);//API to convert search query to object\r\n        const city_name = params.get('city');\r\n\r\n        fetch(`${base_path}/api/get_messes_by_city.php?city=${city_name}`)//API to fetch messes object it returns a promise\r\n            .then(response => response.json())//response.json() is an api which parse the response to object . it also returns a promise\r\n            .then(responseData => {\r\n                this.setState({\r\n                    messes: responseData\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    toggleInterested = mess_id => {\r\n        fetch(`${base_path}/api/toggle_interested_mess.php?mess_id=${mess_id}`)\r\n            .then(response => response.json())\r\n            .then(responseData => {\r\n                if (responseData.success) {\r\n                    console.log('Success');\r\n                    this.updateInterested(mess_id);\r\n                } else if (!responseData.success && !responseData.is_logged_in) {\r\n                    console.log('Not logged in!');\r\n                    window.$(\"#login-modal\").modal(\"show\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Error fetching and parsing data', error);\r\n            });\r\n    }\r\n\r\n    updateInterested = mess_id => {\r\n        let updated_messes = [...this.state.messes];\r\n        updated_messes.forEach((mess) => {\r\n            if (mess.id === mess_id) {\r\n                mess.is_interested = !mess.is_interested;\r\n                if (mess.is_interested) {\r\n                    mess.interested_users_count++;\r\n                } else {\r\n                    mess.interested_users_count--;\r\n                }\r\n            }\r\n        });\r\n    \r\n\r\n        this.setState({\r\n            messes: updated_messes\r\n        });\r\n    }\r\n\r\n    updateSort = sort => {\r\n        this.setState({\r\n            sort: sort\r\n        });\r\n    }\r\n    // setMenu=menu =>{\r\n    //     this.setState({\r\n    //         menu: menu\r\n    //     });\r\n    // }\r\n    //updateMenu=Event =>\r\n\r\n    updateFilter = gender => {\r\n        this.setState({\r\n            filter: {\r\n                gender: gender\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let messes = [...this.state.messes];\r\n\r\n        // Sorting\r\n        if (this.state.sort !== \"none\") {\r\n            if (this.state.sort === \"desc\") {\r\n                messes.sort((a, b) => b.rent - a.rent);\r\n            } else {\r\n                messes.sort((a, b) => a.rent - b.rent);\r\n            }\r\n        }\r\n\r\n        // Filter\r\n        if (this.state.filter.gender !== \"none\") {\r\n            messes = messes.filter(mess =>\r\n                mess.gender === this.state.filter.gender\r\n            );\r\n        }\r\n\r\n        let mess_cards,mess_cards2;\r\n        if (messes.length > 0) {\r\n            mess_cards = messes.filter(mess=>\r\n                mess.is_owner).map(mess =>\r\n                \r\n                    // if(mess.is_owner){\r\n                        <MessCard\r\n                        key={mess.id}\r\n                        mess={mess}\r\n                        // isEditing={this.state.isEditing}\r\n                        toggleInterested={() => this.toggleInterested(mess.id)}\r\n                        />\r\n                    // }\r\n                    // else{\r\n                    //     <MessCard2\r\n                    //     key={mess.id}\r\n                    //     mess={mess}\r\n                    //     // isEditing={this.state.isEditing}\r\n                    //     toggleInterested={() => this.toggleInterested(mess.id)}\r\n                    //     />\r\n                    // }\r\n                \r\n            \r\n               \r\n            );\r\n            mess_cards2 = messes.filter(mess=>\r\n                mess.is_owner==false).map(mess =>\r\n                \r\n                    // if(mess.is_owner){\r\n                        <MessCard2\r\n                        key={mess.id}\r\n                        mess={mess}\r\n                        // isEditing={this.state.isEditing}\r\n                        toggleInterested={() => this.toggleInterested(mess.id)}\r\n                        />\r\n                    // }\r\n                    // else{\r\n                    //     <MessCard2\r\n                    //     key={mess.id}\r\n                    //     mess={mess}\r\n                    //     // isEditing={this.state.isEditing}\r\n                    //     toggleInterested={() => this.toggleInterested(mess.id)}\r\n                    //     />\r\n                    // }\r\n                \r\n            \r\n               \r\n            );\r\n        } else {\r\n            mess_cards = <Nomess />;\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className=\"page-container\">\r\n                    {/* <FilterBar\r\n                        currentSort={this.state.sort}\r\n                        updateSort={this.updateSort}\r\n                        currentFilter={this.state.filter}\r\n                    /> */}\r\n\r\n                    {mess_cards}\r\n                    {mess_cards2}\r\n                </div>\r\n\r\n                {/* <FilterModal\r\n                    currentFilter={this.state.filter}\r\n                    updateFilter={this.updateFilter}\r\n                /> */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default mess;\r\n","import React, { Component } from 'react';\n//import FilterBar from './FilterBar';\n// import FilterModal from './FilterModal';\n// import PropertyCard from './PropertyCard';\n// import NoProperty from './NoProperty';\nimport { base_path } from './utils.js';\nimport Pg from './Pg';\nimport Mess from './Mess';\nclass App extends Component {\n\n    render() {\n        return (\n            <>\n                {/* <Pg/> */}\n                <Mess/>\n            </>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root1')\n);\n\n"],"sourceRoot":""}